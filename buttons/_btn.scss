// Variables
$corner-radius-s: 3px;
$corner-radius-m: 50px;
$corner-radius-l: 50%;



// Mixins
// Placeholders
// Functions

/**
 * Buttons
*/
.cta {
  display: inline-block;
  line-height: 1.7;
  padding: 8px 16px;
  border: 2px solid getColor(p-main);
  outline: none;
  cursor: pointer; 
  user-select: none;
  font-size: $vr/2;
  font-weight: 700;
  text-transform: uppercase;
  background-color: getColor(w);
  color: getColor(p-main);
  
  &:hover {     
      background-color: getColor(p-main);
      color: getColor(w);
    }

    &:focus {
      background-color: getColor(p-light);
      border-color: getColor(p-light);
      color: getColor(w);
    }

    &:active {
      background-color: getColor(p-dark);
      border-color: getColor(p-dark);
      color: getColor(w);
    }
  
}


// Modifiers
.cta--link {
  text-decoration: none;
}

.cta--block {
  display: block;
}

[disabled] {
  color: getColor(dis-tx);
  border-color: getColor(dis-tx);
  cursor: default;
  pointer-events: none;
  &:hover,
  &:focus,
  &:active {
    background: transparent;
  }
}







.cta--s {
    background-color: getColor(s-main);
    color: getColor(b);
    border-color: getColor(s-main);

    &:hover,
    &:focus,
    &:active {     
      background-color:getColor(s-dark);
      border-color: getColor(s-dark);
      color: getColor(b);
    }
}


/** 
 * Outlined Buttons
 */
.cta--txt {
  
    border: none;

    &:hover {     
      background-color: getColor(p-light);
    }

    &:focus {
     background-color: getColor(p-main);
    }

    &:active {
     background-color: getColor(p-dark);
    }
}



.cta-group {
  @include flex-and-center-vh;
  text-align: center;
}

/**
 * Group that has space in between
 */
.cta-group--gap {
  margin: -$vr;
  > .cta {
    flex-basis: 0;
    flex-grow: 1;
    flex-shrink: 1;
    margin: $vr;
  }
}



